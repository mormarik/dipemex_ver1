document.addEventListener("DOMContentLoaded", () => {
  const checkoutForm = document.getElementById("checkout-form");
  const productsList = document.getElementById("checkout-products-list");
  const totalPriceDiv = document.getElementById("checkout-total-price");
  const errorDiv = document.getElementById("checkout-error");

  // === –ü–æ–ª—É—á–∞–µ–º —Ç–æ–≤–∞—Ä—ã –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã === //
  const cart = JSON.parse(localStorage.getItem("cart")) || [];

  if (cart.length === 0) {
    productsList.innerHTML = "<li>–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞</li>";
    totalPriceDiv.textContent = "–ò—Ç–æ–≥–æ: 0 ‚ÇΩ";
    return;
  }

  let total = 0;

  // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–≤–∞—Ä—ã –ø–æ ID –∏–∑ API
  Promise.all(
    cart.map(id =>
      fetch(`/api/products/${id}`).then(res => {
        if (!res.ok) throw new Error(`–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ ${id}`);
        return res.json();
      })
    )
  ).then(products => {
    const productMap = {};
    cart.forEach(id => {
      if (!productMap[id]) productMap[id] = { count: 0 };
      productMap[id].count++;
    });

    const items = products.map(product => {
      const count = productMap[product._id]?.count || 1;
      const subtotal = product.price * count;
      total += subtotal;

      const li = document.createElement("li");
      li.innerHTML = `
        <span>${product.name}</span>
        <span>${product.price} √ó ${count} = ${subtotal} ‚ÇΩ</span>
      `;
      productsList.appendChild(li);

      return {
        productId: product._id,
        name: product.name,
        price: product.price,
        quantity: count
      };
    });

    // ‚úÖ –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ —Ñ–æ—Ä–º–µ
    window.checkoutData = {
      items,
      total
    };

    totalPriceDiv.textContent = `–ò—Ç–æ–≥–æ: ${total} ‚ÇΩ`;

    // === –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å —Ñ–æ—Ä–º—É === //
    if (checkoutForm) {
      checkoutForm.addEventListener("submit", async e => {
        e.preventDefault();

        const fullName = document.getElementById("full-name").value.trim();
        const address = document.getElementById("address").value.trim();
        const phone = document.getElementById("phone").value.trim();
        const email = document.getElementById("email").value.trim();
        const deliveryMethod = document.querySelector('input[name="delivery"]:checked')?.value;
        const paymentMethod = document.querySelector('input[name="payment"]:checked')?.value;

        if (!fullName || !address || !phone || !email || !deliveryMethod || !paymentMethod) {
          errorDiv.textContent = "‚ùó –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è";
          return;
        }

        // –í–∞–ª–∏–¥–∞—Ü–∏—è —Ç–µ–ª–µ—Ñ–æ–Ω–∞
        const cleanedPhone = phone.replace(/\D/g, '');
        const phoneRegex = /^(\+7|\+8)\d{10,14}$/;

        if (!phoneRegex.test(`+${cleanedPhone}`)) {
          errorDiv.textContent = "‚ö†Ô∏è –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ç–µ–ª–µ—Ñ–æ–Ω–∞";
          return;
        }

        // –í–∞–ª–∏–¥–∞—Ü–∏—è email
        const emailRegex = /\S+@\S+\.\S+/;
        if (!emailRegex.test(email)) {
          errorDiv.textContent = "‚ö†Ô∏è –ù–µ–≤–µ—Ä–Ω—ã–π email";
          return;
        }

        // –§–æ—Ä–º–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –∑–∞–∫–∞–∑–∞
        const orderData = {
          fullName,
          address,
          phone: `+${cleanedPhone}`,
          email,
          deliveryMethod,
          paymentMethod,
          items: window.checkoutData.items,
          total: window.checkoutData.total
        };

        try {
          const response = await fetch("/api/orders", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            credentials: "include",
            body: JSON.stringify(orderData)
          });

          if (!response.ok) {
            const errorText = await response.text(); // üéØ –¢–æ—á–Ω—ã–π –æ—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞
            console.error("‚ùå –°–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª:", errorText);
            alert("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑");
            return;
          }

          const result = await response.json();
          localStorage.setItem("last-order", JSON.stringify(result.order));
          window.location.href = "order-success.html";
        } catch (err) {
          console.error("‚ùå –û—à–∏–±–∫–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞:", err);
          alert("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–∫–∞–∑");
        }
      });
    }

  }).catch(err => {
    console.error("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤:", err);
    productsList.innerHTML = `<li>–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤: ${err.message}</li>`;
  });
});